bp vbscript + 0x28b21  // CRegExp::Test


# STRUCTURE 

CRegExp::Create() -- creates reg_exp_object add reference count
CRegExp::Release() -- destructor 

Test(regex object * this, BSTR strid,  ...) 
	prepare(this, strid, ...)

	RegExpExec()
		RegExpExec::Fexec()
			Large switch statement recursively calling itself :-{


	delete()

	delete()

	~RegExpExec()

# INTERESTING 

RegExpComp::CompileExplicit  -- Responsible for parsing the expression itself 



OLEAUT32 FUNCS

Oleaut32 keeps track of two instances of objects has a global increment object and also has individual object incrementation as well 

__imp__SysAllocString@4
__imp__SysReAllocString@8
__imp__SysAllocStringLen@8
__imp__SysFreeString@4
__imp__SysStringLen@4
__imp__VariantInit@4
__imp__VariantClear@4
__imp__VariantCopy@8
__imp__VariantCopyInd@8
__imp__VariantChangeType@16
__imp__SafeArrayCreate@12
__imp__SafeArrayDestroy@4
__imp__SafeArrayLock@4
__imp__SafeArrayUnlock@4
__imp__GetActiveObject@12
__imp__SafeArrayDestroyDescriptor@4
__imp__SafeArrayDestroyData@4

__imp__SafeArrayRedim@8 -- unicorn vuln here (not auditing)

__imp__VarR8FromStr@16

__imp__VarDateFromStr@16  -- Date is a data type 

__imp__VarBstrFromI4@16
__imp__VarBstrFromR4@16
__imp__VarBstrFromR8@20
__imp__VarBstrFromDate@20
__imp__VariantChangeTypeEx@20
__imp__SysStringByteLen@4
__imp__SysAllocStringByteLen@8
__imp__CreateTypeLib@12
__imp__LoadTypeLib@8
__imp__LoadRegTypeLib@20
__imp__RegisterTypeLib@12
__imp__CreateTypeLib2@12
__imp__LoadTypeLibEx@12

__imp__GetErrorInfo@8
	Immediately farmed out 

__imp__VarBstrFromUI4@16 -- 
	Create BSTR from NUMBER
	
__imp__VarDateFromUdate@12 -- NOT SUPER INTERESTING

	ErrConvertUdsCalendar called to do main conversion
		Doesnt modify much (seems low on the list of potential)

	BaseYearof2DigitYear 
		getdateinfo

global arrays dealing with getting proper day
numb_array contains the values of the dates added together ir.. [0, 31, 59(28+31), ...]

__imp__VarUdateFromDate@16

	Farms out to ErrConverUdsCalendar same as prev


__imp__OleLoadPicture@20  -- vbscript!VbsLoadPicture

??? Strange 

((void (__stdcall *)(cpicture *, int))v12->vtable_6FC53768->addreference)(v12, v14);
v13 = _PictLoadPicture((struct CPicture *)v12, lpstream, lSize, fRunmode, xSizeDesired, ySizeDesired, dwFlags);
if ( v13 >= 0 )
v13 = v12->vtable_6FC53768->query_interface((CPicture *)v12, riid, lplpvObj);
((void (*)(void))v12->vtable_6FC53768->release)();
result = v13;


releases picture after creation. But doesn't seem to call anything in relation to its object incrementation :/ odd

* == audited

